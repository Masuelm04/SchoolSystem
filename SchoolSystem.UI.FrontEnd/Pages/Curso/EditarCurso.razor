<BSToaster />
@page "/cursos/edit/{id:int}"
@using SchoolSystem.Core.DTOs.Curso
@using SchoolSystem.UI.FrontEnd.Services
@using BlazorStrap
@inject IBlazorStrap blazorStrap
@inject CursoService cursoService
@inject IJSRuntime JSRuntime
@inject NavigationManager navigation

<EditForm Model="curso" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
   @*  <ValidationSummary class="text-center" /> *@

    <div>
        <div class="mb-3">
            <BSButton Color="BSColor.Secondary" @onclick="Volver">Volver</BSButton>
        </div>

        <div class="mb-3 text-center">
            <h2>EDITAR CURSO</h2>
        </div>

        <div class="mb-3">
            <BSLabel>Curso</BSLabel>
            <BSInput InputType="InputType.Text" TValue="string" @bind-value="curso.Nombre" />
            <ValidationMessage For="@(() => curso.Nombre)" />
        </div>

        <div class="mb-3 text-center">
            <BSButton IsSubmit="true" Color="BSColor.Primary">Editar</BSButton>
        </div>
    </div>

</EditForm>

@code {
    [Parameter]
    public int id { get; set; }
    private CursoDTO curso = new CursoDTO();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            curso = await cursoService.ObtenerCursoPorIdAsync(id);

            if (curso == null)
            {
                await JSRuntime.InvokeVoidAsync("alert", "Curso no encontrado.");
                navigation.NavigateTo("/cursos");
            }

        }
        catch (Exception ex)
        {
            blazorStrap.Toaster.Add($"Error al cargar datos: {ex.Message}", options => options.CloseAfter = 5000);
        }
    }

    private async Task HandleValidSubmit()
    {
        await cursoService.EditarCursoAsync(id, curso);
        navigation.NavigateTo("/cursos");

        blazorStrap.Toaster.Add("¡Curso editado exitosamente!", o =>
            {
                o.Color = BSColor.Primary;
                o.HasIcon = true;
                o.CloseAfter = 5000;
            });
    }

    private void Volver()
    {
        navigation.NavigateTo("/cursos");
    }
}
